<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="label53.Text" xml:space="preserve">
    <value>______________________________________________________________________________________________________________________________________________________________________________________________________________________</value>
  </data>
  <data name="label52.Text" xml:space="preserve">
    <value>_______________________________________________________________________________________________________________________________________________________________________________________________________________________</value>
  </data>
</root>